{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "UpdateUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-dynamodb-streams-dev-updateUser"
      }
    },
    "CreateUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-dynamodb-streams-dev-createUser"
      }
    },
    "DeleteUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-dynamodb-streams-dev-deleteUser"
      }
    },
    "GetUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-dynamodb-streams-dev-getUser"
      }
    },
    "UploadEventToSQSLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-dynamodb-streams-dev-uploadEventToSQS"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "serverless-dynamodb-streams",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-dynamodb-streams-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-dynamodb-streams-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "dynamodb:*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-dynamodb-streams",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "UpdateUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-dynamodb-streams/dev/1561114817425-2019-06-21T11:00:17.425Z/serverless-dynamodb-streams.zip"
        },
        "FunctionName": "serverless-dynamodb-streams-dev-updateUser",
        "Handler": "handler.updateUser",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 6
      },
      "DependsOn": [
        "UpdateUserLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "UpdateUserLambdaVersionuCyIbaPhKpisvA8qL6ycNP7OPfLtIgYH7GpXej0uK0c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUserLambdaFunction"
        },
        "CodeSha256": "PzAV6JmgbSW98BaGXB60ZfqSpTyjpBjWObjM6e5fTdU="
      }
    },
    "CreateUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-dynamodb-streams/dev/1561114817425-2019-06-21T11:00:17.425Z/serverless-dynamodb-streams.zip"
        },
        "FunctionName": "serverless-dynamodb-streams-dev-createUser",
        "Handler": "handler.createUser",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 6
      },
      "DependsOn": [
        "CreateUserLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "CreateUserLambdaVersionqa2tq1SEn2TmFzHO5FKJrAC8itEBhvTJH77LCzeWkiE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateUserLambdaFunction"
        },
        "CodeSha256": "PzAV6JmgbSW98BaGXB60ZfqSpTyjpBjWObjM6e5fTdU="
      }
    },
    "DeleteUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-dynamodb-streams/dev/1561114817425-2019-06-21T11:00:17.425Z/serverless-dynamodb-streams.zip"
        },
        "FunctionName": "serverless-dynamodb-streams-dev-deleteUser",
        "Handler": "handler.deleteUser",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 6
      },
      "DependsOn": [
        "DeleteUserLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "DeleteUserLambdaVersionfTYwJ9Wuq16CsBcYnAy9yn7qqtK1C86AnBKCi0qoo4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteUserLambdaFunction"
        },
        "CodeSha256": "PzAV6JmgbSW98BaGXB60ZfqSpTyjpBjWObjM6e5fTdU="
      }
    },
    "GetUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-dynamodb-streams/dev/1561114817425-2019-06-21T11:00:17.425Z/serverless-dynamodb-streams.zip"
        },
        "FunctionName": "serverless-dynamodb-streams-dev-getUser",
        "Handler": "handler.getUser",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 6
      },
      "DependsOn": [
        "GetUserLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GetUserLambdaVersionOOtF9pC8COmqoVGY5qBgBXM3FV9rAihWRH2okYedY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUserLambdaFunction"
        },
        "CodeSha256": "PzAV6JmgbSW98BaGXB60ZfqSpTyjpBjWObjM6e5fTdU="
      }
    },
    "UploadEventToSQSLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-dynamodb-streams/dev/1561114817425-2019-06-21T11:00:17.425Z/serverless-dynamodb-streams.zip"
        },
        "FunctionName": "serverless-dynamodb-streams-dev-uploadEventToSQS",
        "Handler": "handler.uploadEventToSQS",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 6
      },
      "DependsOn": [
        "UploadEventToSQSLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "UploadEventToSQSLambdaVersionQeBGlywvYkAy8oTUzMCschrCvz5RvLQ9y1flMQZZbI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UploadEventToSQSLambdaFunction"
        },
        "CodeSha256": "PzAV6JmgbSW98BaGXB60ZfqSpTyjpBjWObjM6e5fTdU="
      }
    },
    "UsersDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "users"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "UpdateUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateUserLambdaVersionuCyIbaPhKpisvA8qL6ycNP7OPfLtIgYH7GpXej0uK0c"
      }
    },
    "CreateUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateUserLambdaVersionqa2tq1SEn2TmFzHO5FKJrAC8itEBhvTJH77LCzeWkiE"
      }
    },
    "DeleteUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteUserLambdaVersionfTYwJ9Wuq16CsBcYnAy9yn7qqtK1C86AnBKCi0qoo4"
      }
    },
    "GetUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUserLambdaVersionOOtF9pC8COmqoVGY5qBgBXM3FV9rAihWRH2okYedY"
      }
    },
    "UploadEventToSQSLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UploadEventToSQSLambdaVersionQeBGlywvYkAy8oTUzMCschrCvz5RvLQ9y1flMQZZbI"
      }
    }
  }
}