{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "PermissionsNestedStack nested stack",
  "Parameters": {
    "ApiGatewayRestApiParameter": {
      "Type": "String"
    },
    "PushCreateUserToSQSLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "PushUpdateUserToSQSLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "PushDeleteUserToSQSLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "ReadUserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "RecoveryLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "PushSigninUserToSQSLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "PushUpdateProfileToSQSLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetProfileInfoLambdaFunctionArnParameter": {
      "Type": "String"
    }
  },
  "Resources": {
    "AdminUnderscoreauthorizerLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-admin_authorizer",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      },
      "DependsOn": []
    },
    "GetProfileInfoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetProfileInfoLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "PushCreateUserToSQSLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PushCreateUserToSQSLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "PushDeleteUserToSQSLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PushDeleteUserToSQSLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "PushSigninUserToSQSLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PushSigninUserToSQSLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "PushUpdateProfileToSQSLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PushUpdateProfileToSQSLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "PushUpdateUserToSQSLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PushUpdateUserToSQSLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "ReadUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "ReadUserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "RecoveryLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "RecoveryLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UserUnderscoreauthorizerLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": "arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-user_authorizer",
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      },
      "DependsOn": []
    }
  },
  "Outputs": {}
}