  # ------------------------------- USER FUNCTIONS ------------------------------- #

  pushCreateUserToSQS: 
    handler: handler.pushCreateUserToSQS 
    events: 
      - http:
          path: /pushcreateusertosqs
          method: post
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-admin_authorizer
            type: request
          cors: true
          integration: lambda

  pushUpdateUserToSQS: 
    handler: handler.pushUpdateUserToSQS 
    events: 
      - http:
          path: /pushupdateusertosqs
          method: post
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-admin_authorizer
            type: request
            resultTtlInSeconds: 0
          cors: true

  pushDeleteUserToSQS: 
    handler: handler.pushDeleteUserToSQS 
    events: 
      - http:
          path: /pushdeleteusertosqs
          method: post
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-admin_authorizer
            type: request
            resultTtlInSeconds: 0
          cors: true
          integration: lambda

  commandCreateUser:
    handler: handler.commandCreateUser
    timeout: 10
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:582373673306:createUserQueue #set ARN of an existing queue 

  commandUpdateUser:
    handler: handler.commandUpdateUser
    timeout: 10
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:582373673306:updateUserQueue
          
  commandDeleteUser:
    handler: handler.commandDeleteUser
    timeout: 10
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:582373673306:deleteUserQueue 

  createUser:
    handler: handler.createUser
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:582373673306:executeCreateUserQueue

  updateUser:
    handler: handler.updateUser
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:582373673306:executeUpdateUserQueue

  deleteUser: 
    handler: handler.deleteUser
    events:
      - sqs:
          arn: arn:aws:sqs:eu-central-1:582373673306:executeDeleteUserQueue

  readUser: 
    handler: handler.readUser
    events: 
      - http: 
          path: /readUser
          method: get
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-admin_authorizer
            type: request
            resultTtlInSeconds: 0
          cors: true
          integration: lambda
          request:
            template:
              application/json: '{ "userId": "$input.params("userId")" }'

  # ------------------------------- USER APP FUNCTIONS ------------------------------- #

  pushSigninUserToSQS: 
    handler: handler.pushSigninUserToSQS 
    events: 
      - http:
          path: /pushsigninusertosqs
          method: post
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-user_authorizer
            type: request
            resultTtlInSeconds: 0
          cors: true
          integration: lambda

  pushUpdateProfileToSQS: 
    handler: handler.pushUpdateProfileToSQS 
    events: 
      - http:
          path: /pushupdateprofiletosqs
          method: post
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-user_authorizer
            type: request
            resultTtlInSeconds: 0
          cors: true
          integration: lambda

  getProfileInfo: 
    handler: handler.getProfileInfo
    events: 
      - http: 
          path: /getprofileinfo
          method: get
          authorizer: 
            arn: arn:aws:lambda:eu-central-1:582373673306:function:serverless-user-management-dev-user_authorizer
            type: request
            resultTtlInSeconds: 0
          cors: true
          integration: lambda
          request:
            template:
              application/json: '{ "userId": "$input.params("userId")" }'